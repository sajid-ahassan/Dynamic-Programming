#include <bits/stdc++.h>
using namespace std;

#define all(x) (x).begin(), (x).end()
#define allr(x) (x).rbegin(), (x).rend()
#define gsize(x) (int)((x).size())
#define int long long
#define endl '\n'
#define optimize()                \
    ios_base::sync_with_stdio(0); \
    cin.tie(0);                   \
    cout.tie(0);
bool comparePairs(const pair<int, int> &a, const pair<int, int> &b)
{
    if (a.first != b.first)
        return a.first < b.first;
    return a.second < b.second;
}

int mod = 1e6 + 9;
int ct = 0;
void solve()
{
}
int fnd(vector<pair<int, int>> &arr, vector<vector<int>> &dp, int n, int w)
{
    if (n == 0)
    {
        if (arr[n].first <= w)
            return arr[n].second;
        return 0;
    }

    if (dp[n][w] != -1)
        return dp[n][w];
    int not_take = 0 + fnd(arr, dp, n - 1, w);
    int take = INT_MIN;
    if (arr[n].first <= w)
        take = arr[n].second + fnd(arr, dp, n - 1, w - arr[n].first);
    return dp[n][w] = max(take, not_take);
}
signed main()
{
    optimize();
    int n, w;
    cin >> n >> w;
    vector<pair<int, int>> arr(n);
    for (int i = 0; i < n; i++)
    {
        cin >> arr[i].first >> arr[i].second;
    }
    vector<vector<int>> dp(n, vector<int>(w+1, -1));
    cout << fnd(arr, dp, n - 1, w) << endl;
    return 0;
}
