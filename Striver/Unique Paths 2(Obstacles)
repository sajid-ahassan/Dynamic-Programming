#include <bits/stdc++.h>
using namespace std;

#define all(x) (x).begin(), (x).end()
#define allr(x) (x).rbegin(), (x).rend()
#define gsize(x) (int)((x).size())
#define int long long
#define endl '\n'
#define optimize()                \
    ios_base::sync_with_stdio(0); \
    cin.tie(0);                   \
    cout.tie(0);
bool comparePairs(const pair<int, int> &a, const pair<int, int> &b)
{
    if (a.first != b.first)
        return a.first < b.first;
    return a.second < b.second;
}

int mod = 1e6 + 9;
int ct = 0;
void solve()
{
}
int fnd(vector<vector<int>> &arr, vector<vector<int>> &dp, int i, int j)
{
    if (i >= 0 && j >= 0 && arr[i][j] == -1)
        return 0;
    if (i == 0 && j == 0)
        return 1;
    if (i < 0 || j < 0)
        return 0;
    if (dp[i][j] != -1)
        return dp[i][j];
    int l = fnd(arr, dp, i - 1, j);
    int r = fnd(arr, dp, i, j - 1);
    return dp[i][j] = r + l;
}

signed main()
{
    optimize();
    int n, m;
    cin >> n >> m;
    vector<vector<int>> arr(n, vector<int>(m));
    vector<vector<int>> dp(n, vector<int>(m, -1));
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            cin >> arr[i][j];
        }
    }
    cout << fnd(arr, dp, n - 1, m - 1) << endl;
    return 0;
}
