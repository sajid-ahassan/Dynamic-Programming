#include <bits/stdc++.h>
using namespace std;

#define all(x) (x).begin(), (x).end()
#define allr(x) (x).rbegin(), (x).rend()
#define gsize(x) (int)((x).size())
#define int long long
#define endl '\n'
#define optimize()                \
    ios_base::sync_with_stdio(0); \
    cin.tie(0);                   \
    cout.tie(0);
bool comparePairs(const pair<int, int> &a, const pair<int, int> &b)
{
    if (a.first != b.first)
        return a.first < b.first;
    return a.second < b.second;
}

int mod = 1e6 + 9;
int ct = 0;
void solve()
{
}
int fnd(vector<vector<int>> &arr, vector<vector<int>> &dp, int ind, int task)
{
    if (ind == 0)
    {
        int mx = 0;
        for (int i = 0; i < 3; i++)
        {
            if (i != task)
                mx = max(mx, arr[ind][i]);
        }
        return mx;
    }
    if (dp[ind][task] != -1)
        return dp[ind][task];
    int mxi = 0;
    for (int i = 0; i < 3; i++)
    {
        if (i != task)
        {
            int l = arr[ind][i] + fnd(arr, dp, ind - 1, i);
            mxi = max(mxi, l);
        }
    }
    return dp[ind][task] = mxi;
}

signed main()
{
    optimize();
    int n;
    cin >> n;
    vector<vector<int>> arr(n, vector<int>(3));
    vector<vector<int>> dp(n, vector<int>(4, -1));
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < 3; j++)
        {
            cin >> arr[i][j];
        }
    }
    cout << fnd(arr, dp, n - 1, 3) << endl;
    return 0;
}
